#!/bin/bash

#SBATCH --job-name=CPP1m2Rz1384
###SBATCH --partition=batch,guest
#SBATCH --partition=batch
#SBATCH --time=16:00:00
#SBATCH --ntasks=10
#SBATCH --mem-per-cpu=4000
#SBATCH --error=out.%J.err
#SBATCH --output=%J.out

cleanup ()
{
  ext=$1
  abbr=( "p" "c" "e" "l" "o")
  for symb in ${abbr[*]}
  do
    rm -f ${symb}[a-z,1-9].$ext ${symb}[a-z,1-9][0-9].$ext ${symb}[a-z,1-9][0-9][0-9].$ext ${symb}[a-z,1-9][0-9][0-9][0-9].$ext ${symb}[a-z]"#"[1-9][0-9][0-9].$ext n*
  done
  cpu=$(grep CPU $outfile)
  if [[ "$cpu" = *Wall* ]]; then
    rm -f atoms2.* str.$ext sdot.$ext site* emesh* ctrl* log* c?\#?.copt eula* rbc* lbc* #vshft*
    echo "1" > completed
  fi
}

ltmp=1
nk=384
vne=0.0000001
outfile="`pwd`/lmpg.out"
ext="copt"
#lmpg="$HOME/bin/lmpg"
lmpg="$HOME/bin/lmpg.nbmx.051019"
cmdopt1="--quit=band --read-emesh --rs=0,0"
cmdopt2="-vlattice=5.0928 -vpgf=1 $ext -vnit=1 -vbeta=0 -vnk=$nk -vnkz=1 -vgamma=1 -vnc=1 -vso=1 -vsparse=0 -vvne=$vne"

module load compiler/intel/13 intel-mkl/13  openmpi/1.6
ulimit -s unlimited

if [ ! -f "completed" ]; then
  if [ "$ltmp" -eq 1 ]; then
    srun -N ${SLURM_NNODES} -n ${SLURM_NNODES} cp -d * /tmp
    srun -N ${SLURM_NNODES} -n ${SLURM_NNODES} tar -C /tmp -zxf `pwd`/atoms2.tar.gz
    pushd .
    cd /tmp
  else
    tar -zxf atoms2.tar.gz
  fi
  mpirun "$lmpg" $cmdopt1 $cmdopt2 > $outfile
  if [ "$ltmp" -eq 1 ]; then
    cp completed ${SLURM_SUBMIT_DIR}/
    popd
  fi
  cleanup "$ext"
fi

#if [ -f "dirflip" ]; then
#  cd `cat dirflip`
#  if [ ! -f "completed" ]; then
#    gunzip -c atoms.tar.gz | tar xf - 
#    mpirun ~/bin/lmpg $cmdopt1 $cmdopt2 > $outfile 
#    cleanup "$ext"
#  fi
#fi
